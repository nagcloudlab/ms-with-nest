


------------------------------------------------------------------
why we need javascript language?
------------------------------------------------------------------

-> client-side (dynamic web-ui) application : runtime ( browser )
-> sever-side application                   : runtime ( Node.js )  
------------------------------------------------------------------ 


------------------------------------------------------------------


=> flexibility

    - dynamic-typing
    - FP features
    - by default all IO operations are 'event' based, i.e async/non-blocking IO 
    - by default single-theaded process but concurrent with async/non-blocking IO 


------------------------------------------------------------------
javascript standarnd
------------------------------------------------------------------

=> ECMAScript community

   current major-version: ES6


------------------------------------------------------------------
How to run javascript program ?
------------------------------------------------------------------


=> using javascript runtime/engine

client ( browser ) envi :
--------------------------

    a. chrome  => v8
    b. firefox => rhino / spider monkey
    c. ie/Edge => chakra
    d. safari  => Nitro



other envi :
--------------------------

    a. Node.js => v8 


-----------------------------------
Naming conventions
-----------------------------------

keywords ==> lower-case
Types ( class ) ==> pascal-case : A____B___C___  e.g JavaEmployee
variables/functions ==> camel-case : ____B____C____ e.g studName, addNumbers()
constant number values     ==> upper-case , e.g const PI=3.14  
file-names          ==> pascal-case,lower-case , data-types.js


------------------------------------------------------------------
//  core javascript : level-1 topics
------------------------------------------------------------------

 => basic data types
 => literal-style objects 
 => scopes / execution-context  ( how code execuytes )
 => FP ( imp topic ) , arrow-function ( es6 )
 => OOP  ( less imp )
 => data structures ( list/array , set ( es6 )  , map ( es6 ))

------------------------------------------------------------------
//  javascript : level-2 topics
------------------------------------------------------------------

=> Es6 New-syntax & New APIs 
    => spread operators
    => de-structuring
    => symbols
    => iterables & generator functions`
    => for-of loop
    ........
=> modules
=> package management tools : NPM / YARN


------------------------------------------------------------------
//  javascript : level-3 topics
------------------------------------------------------------------

Async/Non-blocking Programming
-----------------------------

=> promise api
=> reactive programming with javascript
=> Unit-Testing  


------------------------------------------------------------------

https://javascript.info/
https://developer.mozilla.org/en-US/docs/Web/JavaScript
https://exploringjs.com/

------------------------------------------------------------------

https://github.com/nagcloudlab/revature-java-fullstack/tree/main/code/3-javascript

------------------------------------------------------------------


